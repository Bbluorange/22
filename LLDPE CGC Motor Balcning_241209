import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

# Input data
data = {
    "No.": [1, 2, 3, 4, 5, 6],
    "DE_X_진폭": [19, 19, 8, 10, 17, 17],
    "DE_X_위상": [210, 212, 232, 290, 282, 296],
    "DE_Y_진폭": [15, 28, 8, 16, 18, 21],
    "DE_Y_위상": [15, 28, 188, 143, 119, 147],
    "NDE_X_진폭": [33, 35, 32, 21, 12, 19],
    "NDE_X_위상": [33, 335, 269, 261, 263, 253],
    "NDE_Y_진폭": [48, 52, 42, 22, 12, 13],
    "NDE_Y_위상": [160, 180, 127, 120, 155, 122],
}

# Convert data to DataFrame
df = pd.DataFrame(data)

# Function to convert magnitude and angle to polar coordinates (radians)
def polar_coordinates(magnitude, angle_deg):
    angle_rad = np.radians(angle_deg)
    return magnitude, angle_rad

# Create polar plot
fig, ax = plt.subplots(1, 1, subplot_kw={'projection': 'polar'}, figsize=(8, 8))

# Define sensor types and colors
sensor_types = {
    # "DE_X": ("DE_X_진폭", "DE_X_위상", 'r', "DE X"),
    # "DE_Y": ("DE_Y_진폭", "DE_Y_위상", 'b', "DE Y"),
    "NDE_X": ("NDE_X_진폭", "NDE_X_위상", 'g', "NDE X"),
    "NDE_Y": ("NDE_Y_진폭", "NDE_Y_위상", 'y', "NDE Y"),
}

# Plot each sensor type
for sensor, (amp_col, phase_col, color, label) in sensor_types.items():
    r_vals, theta_vals = [], []
    for i, row in df.iterrows():
        r, theta = polar_coordinates(row[amp_col], row[phase_col])
        r_vals.append(r)
        theta_vals.append(theta)
        # Add labels slightly shifted to the right
        ax.text(theta + 0.05, r, f"#{row['No.']}", fontsize=8, ha='center', va='center', color=color)
    ax.plot(theta_vals, r_vals, f'{color}-', label=label)  # Line connecting points
    ax.scatter(theta_vals, r_vals, c=color, s=30)  # Smaller points (size 30)

# Customize plot
ax.set_title("LLDPE CGC Motor Balancing Polar Plot", va='bottom')
ax.set_theta_zero_location("N")  # Set zero at top
# ax.set_theta_direction(-1)       # Clockwise

# Set grid lines at 40-degree intervals
ax.set_thetagrids(range(0, 360, 40), fontsize=10)

# Set the radial range
ax.set_ylim(0, 60)  # Set maximum radial value to 60

# Add legend
ax.legend(loc="upper right")

# Show plot
plt.show()
